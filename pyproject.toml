[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pylocalpmanager"
requires-python = ">=3.11"
dynamic = ['version']
dependencies    = [
  "colorlog==6.8.0",
  "fastapi==0.105.0",
  "humanize==4.9.0",
  "Jinja2==3.1.2",
  "lxml==4.9.4",
  "pandas==2.1.4",
  "pydantic-settings==2.1.0",
  "requests==2.31.0",
  "strawberry_graphql[debug-server]==0.217.0",
  "uvicorn[standard]==0.25.0",
]

[project.optional-dependencies]
test = [
  "black==23.12.1",
  "httpx==0.26.0",
  "mypy==1.8.0",
  "pre-commit==3.6.0",
  "pylint==3.0.3",
  "pytest==7.4.3",
  "pytest-asyncio==0.23.2",
  "pytest-cov==4.1.0",
  "pytest-timeout==2.2.0",
  "types_PyYAML==6.0.12.12",
  "types_requests==2.31.0.10",
]

[tool.setuptools]
platforms = ["any"]
zip-safe = false

[tool.setuptools.dynamic]
version = {file = "pypmanager/VERSION"}

[tool.setuptools.packages.find]
exclude = ["tests", "tests*"]

[tool.black]
target-version = ["py311"]
line-length = 88

[tool.isort]
profile = "black"

# will group `import x` and `from x import` of the same module.
combine_as_imports = true
force_sort_within_sections = true
forced_separate = [
  "tests",
]
known_first_party = [
  "pypmanager",
  "tests",
]

[tool.pytest.ini_options]
python_files="test_*.py"
addopts=""

[tool.pylint.MASTER]
py-version = "3.11"
ignore = [
    "tests",
]
# Use a conservative default here; 2 should speed up most setups and not hurt
# any too bad. Override on command line as appropriate.
jobs = 2
load-plugins = [
    "pylint.extensions.code_style",
    "pylint.extensions.typing",
]
persistent = false

extension-pkg-whitelist = "pydantic"

[tool.pylint.BASIC]
good-names = [
    "_",
    "df", # DataFrame
    "i",
    "j",

]

[tool.pylint.REPORTS]
score = false

[tool.pylint.TYPECHECK]
ignored-classes = [
    "_CountingAttr",  # for attrs
]
mixin-class-rgx = ".*[Mm]ix[Ii]n"

[tool.pylint.FORMAT]
expected-line-ending-format = "LF"

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines = '^\s*(# )?<?https?://\S+>?$'

[tool.pylint."MESSAGES CONTROL"]
disable = [
  "too-few-public-methods",
  "logging-fstring-interpolation",
  "too-many-statements",
  "too-many-locals",
  "too-many-branches",
  "too-many-public-methods",
  "too-many-instance-attributes",
]

[tool.mypy]
python_version = "3.11"
show_error_codes = true
follow_imports = "silent"
ignore_missing_imports = true
strict_equality = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unreachable = true
strict = true

plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.ruff]
exclude = [
    "tests",
]

target-version = "py311"

select = [
    "A",  # flake8-builtins
    "ASYNC",  # flake8-async
    "C",  # complexity
    "D",  # docstrings
    "E",  # pycodestyle
    "F",  # pyflakes/autoflake
    "I",  # isort
    "ISC",  # flake8-implicit-str-concat
    "N",  # pep8-naming
    "T20", # flake8-print
    "PD", # pandas-vet
    "PLC", # pylint
    "PLE", # pylint
    "PLR", # pylint
    "PLW", # pylint
    "Q000", # Double quotes found but single quotes preferred
    "S",  # flake8-bandit
    "UP",  # pyupgrade
    "W",  # pycodestyle
]

# Same as Black.
line-length = 88

ignore = [# One of these is to be disabled..
          "D213", # See https://github.com/charliermarsh/ruff/issues/2281
          #"D212", # See https://github.com/charliermarsh/ruff/issues/2281

          "D203", # See https://github.com/charliermarsh/ruff/issues/2281
          #"D211", # See https://github.com/charliermarsh/ruff/issues/2281
]

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.pydocstyle]
convention = 'pep257'

[tool.ruff.isort]
# will group `import x` and `from x import` of the same module.
combine-as-imports = true
force-sort-within-sections = true
forced-separate = [
  "tests",
]
known-first-party = [
  "pypmanager",
  "tests",
]

[tool.ruff.per-file-ignores]

# Allow using assert in tests
"tests/*" = ["S101"]
